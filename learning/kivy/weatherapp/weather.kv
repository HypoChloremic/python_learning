<AddLocationForm>: # I guess that it should inherit from boxlayout, or something similar. 
	
	orientation: "vertical"
	# search_input was defined in the python file and the search_box is the id of the textinput defined below. 

	search_input: search_box
	search_results: search_results_list



	BoxLayout:
		height: "40dp" # dp is a spec kind of pixel, which is universal
		size_hint_y: None # This has to be set to None, unless we want to override the height with the hint  

		TextInput:
			id: search_box
			size_hint_x: 50
			focus: True
			multiline: False
			on_text_validate: root.search_location()
		
		Button:
			text: "Search"
			size_hint_x: 25
			on_press: root.search_location() # We have defined this in the python file. 
		
		Button:
			text: "Current Location"
			size_hint_x: 25
	Button: 
		text: "Cancel"
		on_press: app.root.show_current_weather(None)
	
	ListView:
		id: search_results_list
		adapter:
			ListAdapter(data=[], cls=main.LocationButton) # Note that cls means class, and we are supposed to point to the right class for it to be identified. Note that this means taht the main.LocationButton will be called, or it will look at it. 
		width: "200dp"
		size_hint_x: None

<LocationButton>:
	on_press: app.root.show_current_weather(self.text) # This will lead to us looking at weatherroot, because app is the weatherapp, whereas app.root looks at weatherRoot, which is the root of the entire kivy file. 

<CurrentWeather@BoxLayout>:
	location: ""
	conditions: None
	temp: None
	temp_min: None
	temp_max: None
	orientation: "vertical"
	Label:
		text: root.location # This is referencing to the current weather object itself; note then that the label text will change when the location changes. 
	BoxLayout:
		orientation: "horizontal"
		size_hint_y: None
		height: "40dp"
		Button:
			text: "Add location"
			on_press: app.root.add_location_form()
		Button:
			text: "Forecast"

